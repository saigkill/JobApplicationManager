// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using JobApplicationManager.Data.Models;
using Microsoft.EntityFrameworkCore;

namespace JobApplicationManager.Data;

public partial class JobApplicationManagerContext : DbContext
{
    public JobApplicationManagerContext(DbContextOptions<JobApplicationManagerContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Company> Companies { get; set; }

    public virtual DbSet<Contact> Contacts { get; set; }

    public virtual DbSet<JobApplication> JobApplications { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Company>(entity =>
        {
            entity.ToTable("Company");

            entity.Property(e => e.City).HasMaxLength(100);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Postcode).HasMaxLength(10);
            entity.Property(e => e.Street).HasMaxLength(100);
        });

        modelBuilder.Entity<Contact>(entity =>
        {
            entity.ToTable("Contact");

            entity.Property(e => e.Email).HasMaxLength(50);
            entity.Property(e => e.Firstname).HasMaxLength(50);
            entity.Property(e => e.Phone).HasMaxLength(50);
            entity.Property(e => e.Surname).HasMaxLength(50);

            entity.HasOne(d => d.Company).WithMany(p => p.Contacts)
                .HasForeignKey(d => d.CompanyId)
                .HasConstraintName("FK_Contact_Company");
        });

        modelBuilder.Entity<JobApplication>(entity =>
        {
            entity.ToTable("JobApplication");

            entity.Property(e => e.CompanyId).HasColumnName("CompanyID");
            entity.Property(e => e.Jobtitle)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Url).HasMaxLength(100);

            entity.HasOne(d => d.Company).WithMany(p => p.JobApplications)
                .HasForeignKey(d => d.CompanyId)
                .HasConstraintName("FK_JobApplication_Company");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("User");

            entity.Property(e => e.ApplicationPath)
                .IsRequired()
                .HasMaxLength(200);
            entity.Property(e => e.BitlyApiKey).HasMaxLength(50);
            entity.Property(e => e.City)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Firstname)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Homepage).HasMaxLength(50);
            entity.Property(e => e.LatexPath)
                .IsRequired()
                .HasMaxLength(200);
            entity.Property(e => e.Phone)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Postcode)
                .IsRequired()
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.SmtpPass)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.SmtpServer)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.SmtpServerOption)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.SmtpUser)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Street)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Surname)
                .IsRequired()
                .HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}